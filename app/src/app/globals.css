@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer base {
  .collapse-arrow {
    @apply text-[#a6b2ec];
  }
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    appearance: none;
    margin: 0;
  }
  input[type="number"] {
    -moz-appearance: textfield;
  }

  ::-webkit-scrollbar {
    width: 2px;
    height: 2px;
    border-radius: 10px;
  }

  /* Track */
  ::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 10px;
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 10px;
  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
}

.hidden-scrollbar::-webkit-scrollbar {
  display: none;
}
.MuiScopedCssBaseline-root {
  background: transparent !important;
}

.hidden-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}
.scroll {
  -ms-overflow-style: none;
  scrollbar-width: none;
}
.scroll::-webkit-scrollbar {
  display: none;
}
.carousel {
  display: flex;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  -ms-overflow-style: none;
  scrollbar-width: none;
}
.carousel::-webkit-scrollbar {
  display: none;
}

.carousel-center .carousel-item {
  scroll-snap-align: center;
}

.carousel-item {
  box-sizing: content-box;
  display: flex;
  flex: none;
  scroll-snap-align: start;
}
.carousel-center .carousel-item {
  scroll-snap-align: center;
}
.carousel-end .carousel-item {
  scroll-snap-align: end;
}

.alert {
  display: flex;
  width: 100%;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  gap: 1rem /* 16px */;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  padding: 1rem /* 16px */;
  border-radius: var(--rounded-box, 1rem /* 16px */);
}
.alert > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem /* 8px */ * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem /* 8px */ * var(--tw-space-y-reverse));
}
@media (min-width: 768px) {
  .alert {
    flex-direction: row;
  }
  .alert > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }
}
@media (min-width: 768px) {
  .alert {
    flex-direction: row;
  }
  .alert > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }
}
.alert > :where(*) {
  display: flex;
  align-items: center;
  gap: 0.5rem /* 8px */;
}

.alert-error {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}

.dropdown {
    position: relative;
    display: inline-block;
}
.dropdown > *:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.dropdown .dropdown-content {
    visibility: hidden;
    position: absolute;
    z-index: 50;
    opacity: 0;
    transform-origin: top;
    --tw-scale-x: .95;
    --tw-scale-y: .95;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:not(.dropdown-hover):focus-within .dropdown-content {
    visibility: visible;
    opacity: 1;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:not(.dropdown-hover):focus-within .dropdown-content {
    visibility: visible;
    opacity: 1;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:not(.dropdown-hover):focus-within .dropdown-content {
    visibility: visible;
    opacity: 1;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:not(.dropdown-hover):focus-within .dropdown-content {
    visibility: visible;
    opacity: 1;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.rounded-box {
    border-radius: var(--rounded-box, 1rem/* 16px */);
}

.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
}
.menu.horizontal {
    display: inline-flex;
    flex-direction: row;
}
.menu.horizontal :where(li) {
    flex-direction: row;
}
:where(.menu li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch;
}
.menu :where(li:not(.menu-title)) > :where(*:not(ul)) {
    display: flex;
}
.menu :where(li:not(.disabled):not(.menu-title)) > :where(*:not(ul)) {
    cursor: pointer;
    user-select: none;
    align-items: center;
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.menu > :where(li > *:not(ul):focus) {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.menu > :where(li.disabled > *:not(ul):focus) {
    cursor: auto;
}
.menu > :where(li) :where(ul) {
    display: flex;
    flex-direction: column;
    align-items: stretch;
}
.menu > :where(li) > :where(ul) {
    position: absolute;
    display: none;
    top: initial;
    left: 100%;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li:hover) > :where(ul) {
    display: flex;
}
.menu > :where(li:focus) > :where(ul) {
    display: flex;
}
.menu.horizontal > li.bordered > a,
        .menu.horizontal > li.bordered > button,
        .menu.horizontal > li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu.horizontal > li.bordered > a,
        .menu.horizontal > li.bordered > button,
        .menu.horizontal > li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu.horizontal > li.bordered > a,
        .menu.horizontal > li.bordered > button,
        .menu.horizontal > li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem/* 8px */);
}
.menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem/* 8px */);
}
.menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem/* 8px */);
}
.menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem/* 8px */);
}
.menu :where(li.bordered > *) {
    border-left-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu :where(li) > :where(*:not(ul)) {
    gap: 0.75rem/* 12px */;
    padding-left: 1rem/* 16px */;
    padding-right: 1rem/* 16px */;
    padding-top: 0.75rem/* 12px */;
    padding-bottom: 0.75rem/* 12px */;
    color: currentColor;
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover) {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover) {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}
.menu :where(li:empty) {
    margin-left: 1rem/* 16px */;
    margin-right: 1rem/* 16px */;
    margin-top: 0.5rem/* 8px */;
    margin-bottom: 0.5rem/* 8px */;
    height: 1px;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
}
.menu li.disabled > * {
    user-select: none;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
}
.menu li.disabled > *:hover {
    background-color: transparent;
}
.menu li.hover-bordered a {
    border-left-width: 4px;
    border-color: transparent;
}
.menu li.hover-bordered a:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu.compact li > a,
      .menu.compact li > span {
    padding-top: 0.5rem/* 8px */;
    padding-bottom: 0.5rem/* 8px */;
    font-size: 0.875rem/* 14px */;
    line-height: 1.25rem/* 20px */;
}
.menu.compact li > a,
      .menu.compact li > span {
    padding-top: 0.5rem/* 8px */;
    padding-bottom: 0.5rem/* 8px */;
    font-size: 0.875rem/* 14px */;
    line-height: 1.25rem/* 20px */;
}
.menu .menu-title {
    font-size: 0.75rem/* 12px */;
    line-height: 1rem/* 16px */;
    font-weight: 700;
    opacity: 0.4;
}
.menu .menu-title > * {
    padding-top: 0.25rem/* 4px */;
    padding-bottom: 0.25rem/* 4px */;
}
.menu :where(li:not(.disabled)) > :where(*:not(ul)) {
    outline: 2px solid transparent;
    outline-offset: 2px;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.menu > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}
.menu > :where(li:first-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}
.menu > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li:last-child) > :where(:not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li:first-child:last-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li:first-child:last-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li) > :where(ul) :where(li) {
    width: 100%;
    white-space: nowrap;
}
.menu > :where(li) > :where(ul) :where(li) :where(ul) {
    padding-left: 1rem/* 16px */;
}
.menu > :where(li) > :where(ul) :where(li) > :where(:not(ul)) {
    width: 100%;
    white-space: nowrap;
}
.menu > :where(li) > :where(ul) > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}
.menu > :where(li) > :where(ul) > :where(li:first-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}
.menu > :where(li) > :where(ul) > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li) > :where(ul) > :where(li:last-child) > :where(:not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li) > :where(ul) > :where(li:first-child:last-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li) > :where(ul) > :where(li:first-child:last-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}

.card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem/* 16px */);
}
.card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.card figure {
    display: flex;
    align-items: center;
    justify-content: center;
}
.card.image-full {
    display: grid;
}
.card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    opacity: 0.75;
    border-radius: var(--rounded-box, 1rem/* 16px */);
}
.card.image-full:before,
    .card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
}
.card.image-full:before,
    .card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
}
.card.image-full > figure img {
    height: 100%;
    object-fit: cover;
}
.card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
}
.card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
}
.card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
}
.card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}
.card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
}
.card.compact .card-body {
    padding: 1rem/* 16px */;
    font-size: 0.875rem/* 14px */;
    line-height: 1.25rem/* 20px */;
}
.card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit;
}

.card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem/* 16px */);
}
.card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.card figure {
    display: flex;
    align-items: center;
    justify-content: center;
}
.card.image-full {
    display: grid;
}
.card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    opacity: 0.75;
    border-radius: var(--rounded-box, 1rem/* 16px */);
}
.card.image-full:before,
    .card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
}
.card.image-full:before,
    .card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
}
.card.image-full > figure img {
    height: 100%;
    object-fit: cover;
}
.card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
}
.card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
}
.card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
}
.card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}
.card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
}
.card.compact .card-body {
    padding: 1rem/* 16px */;
    font-size: 0.875rem/* 14px */;
    line-height: 1.25rem/* 20px */;
}
.card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit;
}

.avatar {
    position: relative;
    display: inline-flex;
}
.avatar > div {
    display: block;
    aspect-ratio: 1 / 1;
    overflow: hidden;
}
.avatar img {
    height: 100%;
    width: 100%;
    object-fit: cover;
}
.avatar.placeholder > div {
    display: flex;
    align-items: center;
    justify-content: center;
}
.avatar-group :where(.avatar) {
    overflow: hidden;
    border-radius: 9999px;
    border-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b1) / var(--tw-border-opacity));
}
.avatar.online:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
    box-shadow: 0 0 0 2px hsl(var(--b1));
}
.avatar.offline:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
    box-shadow: 0 0 0 2px hsl(var(--b1));
}
